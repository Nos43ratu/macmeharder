"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type Application {
  id: String!
  created: Date!
  updated: Date!
  title: String!
  description: String!
  source: String!
  version: String!
  size: String!
  language: String!
  author: String!
  icon: String
  screenshots: [String]
}

input ApplicationFilter {
  page: Int!
  size: Int
  direction: Direction
}

input CreateApplicationInput {
  title: String!
  description: String!
  source: String!
  version: String!
  size: String!
  language: String!
  author: String!
}

input CreatePostInput {
  title: String!
  subtitle: String
  description: String!
  titles: [String!]!
  descriptions: [String!]!
  apps: [String!]!
}

scalar Date

enum Direction {
  ASC
  DESC
}

scalar File

type FilteredApplications {
  applications: [Application!]!
  hasMore: Boolean!
}

type FilteredPosts {
  posts: [Post!]!
  hasMore: Boolean!
}

input LoginInput {
  username: String!
  password: String!
}

type Mutation {
  createApplication(input: CreateApplicationInput!): Application!
  updateApplication(input: UpdateApplicationInput!): Application!
  deleteApplication(id: ID!): Application!
  createPost(input: CreatePostInput!): Post!
  updatePost(input: UpdatePostInput!): Post!
  deletePost(id: ID!): Post!
  login(input: LoginInput!): User!
  register(input: RegistrationInput!): User!
}

type Post {
  id: ID!
  created: Date!
  updated: Date!
  title: String!
  subtitle: String
  description: String!
  titles: [String!]!
  descriptions: [String!]!
  apps: [String!]!
  logo: String
  screenshots: [String]
}

input PostFilter {
  page: Int!
  size: Int
  direction: Direction
}

type Query {
  application(id: ID!): Application!
  applicationList(filter: ApplicationFilter!): FilteredApplications!
  post(id: ID!): Post!
  postList(filter: PostFilter!): FilteredPosts!
}

input RegistrationInput {
  username: String!
  password: String!
}

input UpdateApplicationInput {
  id: ID!
  title: String
  description: String
  source: String
  version: String
  size: String
  language: String
  author: String!
}

input UpdatePostInput {
  id: ID!
  title: String!
  subtitle: String
  description: String!
  titles: [String!]!
  descriptions: [String!]!
  apps: [String!]!
}

type User {
  id: ID!
  username: String!
  token: String
}

